{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","then","res","data","newObject","post","id","put","App","props","useState","notes","setNotes","showAll","setShowAll","newNote","setNewNote","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","item","find","n","changedNote","returnedNote","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"uJAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAE7B,OACI,+BACKH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCR1CI,EAAU,kCAmBD,EAjBA,WAGX,OAFaC,IAAMC,IAAIF,GAClBG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAeV,EAXA,SAAAC,GAEX,OADeL,IAAMM,KAAKP,EAASM,GAAWH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAUnD,EANA,SAACG,EAAIF,GAGhB,OAFoBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC7CH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCkEVK,EA7EH,SAACC,GACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAC5B,iBADF,mBAAOK,EAAP,KAAgBC,EAAhB,KAIAC,qBAAU,WACRC,IAEGjB,MAAK,SAAAkB,GACJP,EAASO,QAEZ,IAEHC,QAAQC,IAAI,SAAUV,EAAMW,OAAQ,SAEpC,IAwBMC,EAAcV,EAChBF,EACAA,EAAMa,QAAO,SAAAhC,GAAI,OAAuB,IAAnBA,EAAKG,aAe9B,OACE,gCACE,uCACA,yBAAQE,QAAS,kBAAMiB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,SAEhC,6BACGU,EAAYE,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAoBlC,KAAMkC,EAAMjC,iBAAkB,kBAnBtD,SAAAa,GACzB,IAAMd,EAAOmB,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KAChCuB,EAAW,2BAAQrC,GAAR,IAAcG,WAAYH,EAAKG,YAEhDuB,EACUZ,EAAIuB,GACX5B,MAAK,SAAA6B,GACJlB,EAASD,EAAMc,KAAI,SAAAjC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOsC,SAY8BC,CAAmBL,EAAKpB,MAArEoB,EAAKpB,SAE3C,uBAAM0B,SAlDM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBvC,QAASmB,EACTqB,MAAM,IAAIC,MAAOC,cACjB3C,UAAW4C,KAAKC,SAAW,IAG7BtB,EACUiB,GACPlC,MAAK,SAAA6B,GACJlB,EAASD,EAAM8B,OAAOX,IACtBd,EAAW,QAsCb,UACE,uBACE0B,MAAO3B,EACP4B,SAjCiB,SAACV,GACxBb,QAAQC,IAAIY,EAAMW,OAAOF,OACzB1B,EAAWiB,EAAMW,OAAOF,UAgCpB,wBAAQG,KAAK,SAAb,yBCtERC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d92a601c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n        ? 'make not important' : 'make important'\n\n    return (\n        <li>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\nexport default Note\n","import axios from 'axios';\nconst baseUrl = 'http://localhost:8000/api/notes';\n\nconst getAll = () => {\n    const data = axios.get(baseUrl)\n        .then(res => res.data);\n    return data;\n}\n\nconst create = newObject => {\n    const newObj = axios.post(baseUrl, newObject).then(res => res.data);\n    return newObj;\n}\n\nconst update = (id, newObject) => {\n    const updatedNote = axios.put(`${baseUrl}/${id}`, newObject)\n        .then(res => res.data)\n    return updatedNote;\n}\n\nexport default {\n    getAll,\n    create,\n    update\n}\n","import React, { useEffect, useState } from 'react';\nimport Note from './components/Note.js';\nimport axios from 'axios';\nimport noteService from './services/notes';\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [newNote, setNewNote] = useState(\n    'a new note...'\n  );\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, []);\n\n  console.log('render', notes.length, 'notes')\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n\n\n  };\n\n\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      });\n  };\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <button onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all'}\n      </button>\n      <ul>\n        {notesToShow.map(item => <Note key={item.id} note={item} toggleImportance={() => toggleImportanceOf(item.id)} />)}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App.js';\n\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}